<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->
<head>
<!-- Basic -->
<meta charset="utf-8">
<title>Microprocessor 8085 Architecture</title>
<meta name="description" content="Microprocessor 8085 Architecture - Learn Microprocessor in simple and easy steps starting from basic to advanced concepts with examples including Overview, Classification, 8085 Architecture, 8085 Pin Configuration, 8085 Addressing Modes and Interrupts, 8085 Instruction Sets, 8086 Overview, 8086 Functional Units, 8086 Pin Configuration, 8086 Instruction Sets, 8086 Interrupts, 8086 Addressing Modes, Multiprocessor Configuration Overview, 8087 Numeric Data Processor, I/O Interfacing Overview, 8279 Programmable Keyboard, 8257 DMA Controller, Microcontrollers Overview, 8051 Architecture, 8051 Pin Description, 8051 Input Output Ports, 8051 Interrupts, Intel 8255A Programmable Peripheral Interface, Intel 8255A Pin Description, Intel 8253 Programmable Interval Timer, Intel 8253/54 Operational Modes.">
<meta name="keywords" content="Microprocessor, Overview, Classification, 8085 Architecture, 8085 Pin Configuration, 8085 Addressing Modes and Interrupts, 8085 Instruction Sets, 8086 Overview, 8086 Functional Units, 8086 Pin Configuration, 8086 Instruction Sets, 8086 Interrupts, 8086 Addressing Modes, Multiprocessor Configuration Overview, 8087 Numeric Data Processor, I/O Interfacing Overview, 8279 Programmable Keyboard, 8257 DMA Controller, Microcontrollers Overview, 8051 Architecture, 8051 Pin Description, 8051 Input Output Ports, 8051 Interrupts, Intel 8255A Programmable Peripheral Interface, Intel 8255A Pin Description, Intel 8253 Programmable Interval Timer, Intel 8253/54 Operational Modes.">

<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="website">
<meta property="fb:app_id" content="471319149685276">
<meta property="og:site_name" content="www.tutorialspoint.com">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">

<script type="text/javascript" src="js\script-min-v4.js"></script>
<link rel="stylesheet" href="css\style-min.css">
<script async='async' src='js\gpt.js'></script>
<script>
  var googletag = googletag || {};
  googletag.cmd = googletag.cmd || [];
</script>
<script>
googletag.cmd.push(function() {
    googletag.defineSlot('/60931893/tutorial_right_bottom', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-0').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_right_middle', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-1').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_right_top', [300, 250], 'div-gpt-ad-1510138782906-2').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_bottom_leader_board', [[600, 400], [300, 250], [480, 320], [468, 60], [336, 280], [600, 200], [580, 400]], 'div-gpt-ad-1510138782906-3').addService(googletag.pubads());
    googletag.pubads().enableSingleRequest();
    googletag.enableServices();
});
function openNav() {	
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("right_obs").style.display = "block";
}
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
function close_obs_sidenav(){
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
.btnsbmt{ background: #ae2929 !important;}
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #ae2929 url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #ae2929 !important;}
.submenu-item{ border-bottom: 2px solid #ae2929 !important; border-top: 2px solid #ae2929 !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#ae2929; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
</head>

<hr>
<p>8085 is pronounced as "eighty-eighty-five" microprocessor. It is an 8-bit microprocessor designed by Intel in 1977 using NMOS technology.</p>
<p>It has the following configuration &minus;</p>
<ul class="list">
<li>8-bit data bus</li> 
<li>16-bit address bus, which can address upto 64KB</li> 
<li>A 16-bit program counter</li> 
<li>A 16-bit stack pointer</li> 
<li>Six 8-bit registers arranged in pairs: BC, DE, HL</li> 
<li>Requires &plus;5V supply to operate at 3.2 MHZ single phase clock</li> 
</ul>
<p>It is used in washing machines, microwave ovens, mobile phones, etc.</p>
<h2>8085 Microprocessor – Functional Units</h2>
<p>8085 consists of the following functional units &minus;</p>
<h3>Accumulator</h3>
<p>It is an 8-bit register used to perform arithmetic, logical, I/O &amp; LOAD/STORE operations. It is connected to internal data bus &amp; ALU.</p>
<h3>Arithmetic and logic unit</h3>
<p>As the name suggests, it performs arithmetic and logical operations like Addition, Subtraction, AND, OR, etc. on 8-bit data.</p>
<h3>General purpose register</h3>
<p>There are 6 general purpose registers in 8085 processor, i.e. B, C, D, E, H &amp; L. Each register can hold 8-bit data.</p>
<p>These registers can work in pair to hold 16-bit data and their pairing combination is like B-C, D-E &amp; H-L.</p>
<h3>Program counter</h3>
<p>It is a 16-bit register used to store the memory address location of the next instruction to be executed. Microprocessor increments the program whenever an instruction is being executed, so that the program counter points to the memory address of the next instruction that is going to be executed.</p>
<h3>Stack pointer</h3>
<p>It is also a 16-bit register works like stack, which is always incremented/decremented by 2 during push &amp; pop operations.</p>
<h3>Temporary register</h3>
<p>It is an 8-bit register, which holds the temporary data of arithmetic and logical operations.</p>
<h3>Flag register</h3>
<p>It is an 8-bit register having five 1-bit flip-flops, which holds either 0 or 1 depending upon the result stored in the accumulator.</p>
<p>These are the set of 5 flip-flops &minus;</p>
<ul class="list">
<li>Sign (S)</li> 
<li>Zero (Z)</li> 
<li>Auxiliary Carry (AC)</li> 
<li>Parity (P)</li> 
<li>Carry (C)</li>
</ul>
<p>Its bit position is shown in the following table &minus;</p>
<table class="table table-bordered">
<tr>
<th>D7</th>
<th>D6</th>
<th>D5</th>
<th>D4</th>
<th>D3</th>
<th>D2</th>
<th>D1</th>
<th>D0</th>
</tr>
<tr>
<td>S</td>
<td>Z</td>
<td></td>
<td>AC</td>
<td></td>
<td>P</td>
<td></td>
<td>CY</td>
</tr>
</table>
<h3>Instruction register and decoder</h3>
<p>It is an 8-bit register. When an instruction is fetched from memory then it is stored in the Instruction register. Instruction decoder decodes the information present in the Instruction register.</p>
<h3>Timing and control unit</h3>
<p>It provides timing and control signal to the microprocessor to perform operations. Following are the timing and control signals, which control external and internal circuits &minus;</p>
<ul class="list">
<li>Control Signals: READY, RD’, WR’, ALE</li>
<li>Status Signals: S0, S1, IO/M’</li> 
<li>DMA Signals: HOLD, HLDA</li>
<li>RESET Signals: RESET IN, RESET OUT</li>
</ul>
<h3>Interrupt control</h3>
<p>As the name suggests it controls the interrupts during a process. When a microprocessor is executing a main program and whenever an interrupt occurs, the microprocessor shifts the control from the main program to process the incoming request. After the request is completed, the control goes back to the main program.</p>
<p>There are 5 interrupt signals in 8085 microprocessor: INTR, RST 7.5, RST 6.5, RST 5.5, TRAP.</p>
<h3>Serial Input/output control</h3>
<p>It controls the serial data communication by using these two instructions: SID (Serial input data) and SOD (Serial output data).</p>
<h3>Address buffer and address-data buffer</h3>
<p>The content stored in the stack pointer and program counter is loaded into the address buffer and address-data buffer to communicate with the CPU. The memory and I/O chips are connected to these buses; the CPU can exchange the desired data with the memory and I/O chips.</p>
<h3>Address bus and data bus</h3>
<p>Data bus carries the data to be stored. It is bidirectional, whereas address bus carries the location to where it should be stored and it is unidirectional. It is used to transfer the data &amp; Address I/O devices.</p>
<h2>8085 Architecture</h2>
<p>We have tried to depict the architecture of 8085 with this following image &minus;</p>
<img src="image\8085_architecture.jpg" alt="8085 Architecture">
<hr>
<br><br>
</html>

