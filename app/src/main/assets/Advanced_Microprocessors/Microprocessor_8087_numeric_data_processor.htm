<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->
<head>
<!-- Basic -->
<meta charset="utf-8">
<title>Microprocessor 8087 Numeric Data Processor</title>
<meta name="description" content="Microprocessor 8087 Numeric Data Processor - Learn Microprocessor in simple and easy steps starting from basic to advanced concepts with examples including Overview, Classification, 8085 Architecture, 8085 Pin Configuration, 8085 Addressing Modes and Interrupts, 8085 Instruction Sets, 8086 Overview, 8086 Functional Units, 8086 Pin Configuration, 8086 Instruction Sets, 8086 Interrupts, 8086 Addressing Modes, Multiprocessor Configuration Overview, 8087 Numeric Data Processor, I/O Interfacing Overview, 8279 Programmable Keyboard, 8257 DMA Controller, Microcontrollers Overview, 8051 Architecture, 8051 Pin Description, 8051 Input Output Ports, 8051 Interrupts, Intel 8255A Programmable Peripheral Interface, Intel 8255A Pin Description, Intel 8253 Programmable Interval Timer, Intel 8253/54 Operational Modes.">
<meta name="keywords" content="Microprocessor, Overview, Classification, 8085 Architecture, 8085 Pin Configuration, 8085 Addressing Modes and Interrupts, 8085 Instruction Sets, 8086 Overview, 8086 Functional Units, 8086 Pin Configuration, 8086 Instruction Sets, 8086 Interrupts, 8086 Addressing Modes, Multiprocessor Configuration Overview, 8087 Numeric Data Processor, I/O Interfacing Overview, 8279 Programmable Keyboard, 8257 DMA Controller, Microcontrollers Overview, 8051 Architecture, 8051 Pin Description, 8051 Input Output Ports, 8051 Interrupts, Intel 8255A Programmable Peripheral Interface, Intel 8255A Pin Description, Intel 8253 Programmable Interval Timer, Intel 8253/54 Operational Modes.">
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
tex2jax: { inlineMath: [["$","$"],["\\(","\\)"]] },
"HTML-CSS": {
linebreaks: { automatic: true, width: "container" } 
} 
});
</script>
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"> </script>

<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="website">
<meta property="fb:app_id" content="471319149685276">
<meta property="og:site_name" content="www.tutorialspoint.com">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script type="text/javascript" src="js\script-min-v4.js"></script>
<link rel="stylesheet" href="css\style-min.css">
<script async='async' src='js\gpt.js'></script>
<script>
  var googletag = googletag || {};
  googletag.cmd = googletag.cmd || [];
</script>
<script>
googletag.cmd.push(function() {
    googletag.defineSlot('/60931893/tutorial_right_bottom', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-0').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_right_middle', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-1').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_right_top', [300, 250], 'div-gpt-ad-1510138782906-2').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_bottom_leader_board', [[600, 400], [300, 250], [480, 320], [468, 60], [336, 280], [600, 200], [580, 400]], 'div-gpt-ad-1510138782906-3').addService(googletag.pubads());
    googletag.pubads().enableSingleRequest();
    googletag.enableServices();
});
function openNav() {	
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("right_obs").style.display = "block";
}
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
function close_obs_sidenav(){
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
.btnsbmt{ background: #ae2929 !important;}
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #ae2929 url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #ae2929 !important;}
.submenu-item{ border-bottom: 2px solid #ae2929 !important; border-top: 2px solid #ae2929 !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#ae2929; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
</head>

<hr>
<p>8087 numeric data processor is also known as <b>Math co-processor, Numeric processor extension</b> and <b>Floating point unit</b>. It was the first math coprocessor designed by Intel to pair with 8086/8088 resulting in easier and faster calculation.</p>
<p>Once the instructions are identified by the 8086/8088 processor, then it is allotted to the 8087 co-processor for further execution.</p>
<p>The data types supported by 8087 are &minus;</p>
<ul class="list">
<li>Binary Integers</li>
<li>Packed decimal numbers</li>
<li>Real numbers</li>
<li>Temporary real format</li>
</ul>
<p>The most prominent features of 8087 numeric data processor are as follows &minus;</p>
<ul class="list">
<li><p>It supports data of type integer, float, and real types ranging from 2-10 bytes.</p></li>
<li><p>The processing speed is so high that it can calculate multiplication of two 64-bits real numbers in ~27 µs and can also calculate square-root in ~35 µs.</p></li>
<li><p>It follows IEEE floating point standards.</p></li>
</ul>
<h2>8087 Architecture</h2>
<p>8087 Architecture is divided into two groups, i.e., <b>Control Unit</b> (CU) and <b>Numeric Extension Unit</b> (NEU).</p>
<ul class="list">
<li><p>The <b>control unit</b> handles all the communication between the processor and the  memory such as it receives and decodes instructions, reads and writes memory operands, maintains parallel queue, etc. All the coprocessor instructions are ESC instructions, i.e., they start with ‘F’, the coprocessor only executes the ESC instructions while other instructions are executed by the microprocessor.</p></li>
<li><p>The <b>numeric extension unit</b> handles all the numeric processor instructions like arithmetic, logical, transcendental, and data transfer instructions. It has 8 register stack, which holds the operands for instructions and their results.</p></li>
</ul>
<p>The architecture of 8087 coprocessor is as follows &minus;</p>
<img src="image\architecture_8087.jpg" alt="Architecture of 8087">
<h2>8087 Pin Description</h2>
<p>Let us first take a look at the pin diagram of 8087 &minus;</p>
<img src="image\pin_diagram_8087.jpg" alt="Pin Diagram 8087">
<p>The following list provides the Pin Description of 8087 &minus;</p>
<ul class="list">
<li><p><b>AD<sub>0</sub> – AD<sub>15</sub></b> &minus; These are the time multiplexed address/data lines, which carry addresses during the first clock cycle and data from the second clock cycle onwards.</p></li> 
<li><p><b>A<sub>19</sub> / S<sub>6</sub> – A<sub>16</sub>/S</b> &minus; These lines are the time multiplexed address/status lines. It functions in a similar way to the corresponding pins of 8086. The S<sub>6</sub>, S<sub>4</sub> and S3 are permanently high, while the S<sub>5</sub> is permanently low.</p></li>  
<li><p><b>$\overline{BHE}$/S<sub>7</sub></b> &minus; During the first clock cycle, the  $\overline{BHE}$/S<sub>7</sub> is used to enable data on to the higher byte of the 8086 data bus and after that works as status line S<sub>7</sub>.</p></li>  
<li><p><b>QS<sub>1</sub>, QS<sub>0</sub></b> &minus; These are queue status input signals which provides the status of instruction queue, their conditions as shown in the following table &minus;</p></li>
</ul>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">QS<sub>0</sub></th>
<th style="text-align:center;">QS<sub>1</sub></th>
<th style="text-align:center;">Status</th>
</tr>
<tr>
<td style="text-align:center;">0</td>
<td style="text-align:center;">0</td>
<td style="text-align:center;">No operation</td>
</tr>
<tr>
<td style="text-align:center;">0</td>
<td style="text-align:center;">1</td>
<td style="text-align:center;">First byte of opcode from the queue</td>
</tr>
<tr>
<td style="text-align:center;">1</td>
<td style="text-align:center;">0</td>
<td style="text-align:center;">Empty the queue</td>
</tr>
<tr>
<td style="text-align:center;">1</td>
<td style="text-align:center;">1</td>
<td style="text-align:center;">Subsequent byte from the queue</td>
</tr>
</table>
<ul class="list">
<li><p><b>INT</b> &minus; It is an interrupt signal, which changes to high when an unmasked exception has been received during the execution.</p></li>  
<li><p><b>BUSY</b> &minus; It is an output signal, when it is high it indicates a busy state to the CPU.</p></li>   
<li><p><b>READY</b> &minus; It is an input signal used to inform the coprocessor whether the bus is ready to receive data or not.</p></li>  
<li><p><b>RESET</b> &minus; It is an input signal used to reject the internal activities of the coprocessor and prepare it for further execution whenever required by the CPU.</p></li>  
<li><p><b>CLK</b> &minus; The CLK input provides the basic timings for the processor operation.</p></li>  
<li><p><b>VCC</b> &minus; It is a power supply signal, which requires &plus;5V supply for the operation of the circuit.</p></li>  
<li><p><b>S<sub>0</sub>, S<sub>1</sub>, S<sub>2</sub></b> &minus; These are the status signals that provide the status of the operation which is used by the Bus Controller 8087 to generate memory and I/O control signals. These signals are active during the fourth clock cycle.</p></li>
</ul>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S<sub>2</sub></th>
<th style="text-align:center;">S<sub>1</sub></th>
<th style="text-align:center;">S<sub>0</sub></th>
<th style="text-align:center;">Queue Status</th>
</tr>
<tr>
<td style="text-align:center;">0</td>
<td style="text-align:center;">X</td>
<td style="text-align:center;">X</td>
<td style="text-align:center;">Unused</td>
</tr>
<tr>
<td style="text-align:center;">1</td>
<td style="text-align:center;">0</td>
<td style="text-align:center;">0</td>
<td style="text-align:center;">Unused</td>
</tr>
<tr>
<td style="text-align:center;">1</td>
<td style="text-align:center;">0</td>
<td style="text-align:center;">1</td>
<td style="text-align:center;">Memory read</td>
</tr>
<tr>
<td style="text-align:center;">1</td>
<td style="text-align:center;">1</td>
<td style="text-align:center;">0</td>
<td style="text-align:center;">Memory write</td>
</tr>
<tr>
<td style="text-align:center;">1</td>
<td style="text-align:center;">1</td>
<td style="text-align:center;">1</td>
<td style="text-align:center;">Passive</td>
</tr>
</table>
<ul class="list">
<li><p><b>RQ/GT<sub>1</sub> &amp; RQ/GT<sub>0</sub></b> &minus; These are the <b>Request/Grant</b> signals used by the 8087 processors to gain control of the bus from the host processor 8086/8088 for operand transfers.</p></li>
</ul>
<hr>
<br><br>
</html>

